services:
    postgres:
        image: postgres:15
        container_name: hype_postgres
        environment:
            POSTGRES_USER: user
            POSTGRES_PASSWORD: password
            POSTGRES_DB: hype_db
        ports:
            - '5435:5432'
        volumes:
            - postgres_data:/var/lib/postgresql/data
        restart: unless-stopped
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U user -d hype_db']
            interval: 10s
            timeout: 5s
            retries: 5

    # MinIO - временно отключен (проблема с Docker Hub)
    # Раскомментируйте когда понадобится загрузка файлов
    # minio:
    #     image: minio/minio:latest
    #     container_name: hype_minio
    #     command: server /data --console-address ":9001"
    #     environment:
    #         MINIO_ROOT_USER: minioadmin
    #         MINIO_ROOT_PASSWORD: minioadmin
    #     ports:
    #         - '9000:9000' # API
    #         - '9001:9001' # Console UI
    #     volumes:
    #         - minio_data:/data
    #     restart: unless-stopped
    #     healthcheck:
    #         test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
    #         interval: 10s
    #         timeout: 5s
    #         retries: 5

    # RabbitMQ - закомментирован, может понадобиться для:
    # - Очередей задач (отправка email, обработка изображений)
    # - Микросервисной архитектуры (если разделите voice server)
    # - Event-driven архитектуры между сервисами
    # rabbitmq:
    #     image: rabbitmq:3-management
    #     container_name: hype_rabbitmq
    #     ports:
    #         - '5672:5672'   # AMQP protocol
    #         - '15672:15672' # Management UI
    #     environment:
    #         RABBITMQ_DEFAULT_USER: guest
    #         RABBITMQ_DEFAULT_PASS: guest
    #     volumes:
    #         - rabbitmq_data:/var/lib/rabbitmq
    #     restart: unless-stopped

volumes:
    postgres_data:
    # minio_data:
    # rabbitmq_data:
