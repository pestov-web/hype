import { observer } from 'mobx-react-lite';
import { useState } from 'react';
import * as Dialog from '@radix-ui/react-dialog';
import { Button } from '@shared/ui';
import { useAuthStore } from '@shared/lib/hooks/useStores';
import styles from './GuestLoginDialog.module.scss';

interface GuestLoginDialogProps {
    open: boolean;
    onOpenChange?: (open: boolean) => void;
}

export const GuestLoginDialog = observer(({ open, onOpenChange }: GuestLoginDialogProps) => {
    const authStore = useAuthStore();
    const [username, setUsername] = useState('');
    const [error, setError] = useState('');

    const handleSubmit = (e: React.FormEvent) => {
        e.preventDefault();

        if (!username.trim()) {
            setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º');
            return;
        }

        if (username.length < 3) {
            setError('–ù–∏–∫–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 3 —Å–∏–º–≤–æ–ª–æ–≤');
            return;
        }

        if (username.length > 32) {
            setError('–ù–∏–∫–Ω–µ–π–º –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 32 —Å–∏–º–≤–æ–ª–∞');
            return;
        }

        // Mock login with guest username
        authStore.setCurrentUser({
            id: `guest-${Date.now()}`,
            username: username.trim(),
            email: null,
            isGuest: true,
            displayName: null,
            avatarUrl: null,
            bio: null,
            customStatus: null,
            status: 'ONLINE',
            isOnline: true,
            createdAt: new Date(),
            updatedAt: new Date(),
        });

        setError('');
        onOpenChange?.(false);
    };

    return (
        <Dialog.Root open={open} onOpenChange={onOpenChange}>
            <Dialog.Portal>
                <Dialog.Overlay className={styles.overlay} />
                <Dialog.Content className={styles.content}>
                    <Dialog.Title className={styles.title}>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Hype! üëã</Dialog.Title>

                    <Dialog.Description className={styles.description}>
                        –í–æ–π–¥–∏—Ç–µ –∫–∞–∫ –≥–æ—Å—Ç—å, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ. –ü–æ–∑–∂–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç.
                    </Dialog.Description>

                    <form onSubmit={handleSubmit} className={styles.form}>
                        <div className={styles.inputGroup}>
                            <label htmlFor='username' className={styles.label}>
                                –ù–∏–∫–Ω–µ–π–º
                            </label>
                            <input
                                id='username'
                                type='text'
                                className={styles.input}
                                placeholder='–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º...'
                                value={username}
                                onChange={(e) => setUsername(e.target.value)}
                                autoFocus
                                maxLength={32}
                            />
                            {error && <span className={styles.error}>{error}</span>}
                        </div>

                        <div className={styles.actions}>
                            <Button type='submit' variant='primary' style={{ width: '100%' }}>
                                –í–æ–π—Ç–∏ –∫–∞–∫ –≥–æ—Å—Ç—å
                            </Button>
                        </div>

                        <div className={styles.divider}>
                            <span>–∏–ª–∏</span>
                        </div>

                        <div className={styles.authOptions}>
                            <Button type='button' variant='secondary' style={{ width: '100%' }} disabled>
                                –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Discord (—Å–∫–æ—Ä–æ)
                            </Button>
                            <Button type='button' variant='secondary' style={{ width: '100%' }} disabled>
                                –°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç (—Å–∫–æ—Ä–æ)
                            </Button>
                        </div>
                    </form>

                    <Dialog.Close asChild>
                        <button className={styles.closeButton} aria-label='–ó–∞–∫—Ä—ã—Ç—å'>
                            ‚úï
                        </button>
                    </Dialog.Close>
                </Dialog.Content>
            </Dialog.Portal>
        </Dialog.Root>
    );
});
